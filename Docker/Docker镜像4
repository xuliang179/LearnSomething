#Docker镜像

Docker Image镜像：一个镜像可以作为另一个镜像的基石；构建和打包阶段
Docker Image镜像：镜像分层框架
-容器的基石
-层叠的只读文件系统
-联合加载（union mount）
bootfs--->rootfs(centos)--->add emacs--->add apache

层：其实是AUFS（Advanced Union File System，一种联合文件系统）中的重要概念，是实现增量保存与更新的基础

docker运行容器前需要本地存在对应的镜像，如果镜像不存在本地，docker会尝试先从默认镜像仓库下载（默认使用docker hub公共注册服务器中的仓库）
用户也可以通过配置，使用自定义的仓库镜像

#镜像操作
获取镜像：docker pull name [:tag]
查看镜像信息：docker images
docker tag为本地镜像打标签
获取镜像的详细信息：docker inspect id
                              docker inspect -f {{".ContainerConfig.Hostname"}} ContainerId
搜索镜像：docker search
删除镜像：docker rmi当同一个镜像拥有多个标签的时候，只是删除了该镜像多个标签中的指定标签而已，并不影响镜像文件，但当镜像只剩下一个标签的时候，会彻底删除镜像
创建镜像：创建镜像的方法有三种：基于已有镜像的容器创建、基于本地模板导入、基于dockerfile创建
-基于已有的镜像的容器创建 
-基于本地模板导入：也可以直接从一个操作系统模板文件导入一个镜像，推荐使用openvz提供的模板来创建
openvz模板的下载地址为：https://openvz.org/Download/template/precreated
命令导入：cat  centos-xx-minial.tar.gz | docker import - centos:6.5
-基于dockerfile创建
存出镜像：docker save 存出镜像到本地 docker save -o xx.tar ubuntu:14.04
载入镜像：docker load 载入镜像 docker load --input xx.tar
上传镜像：docker push
下载镜像：docker pull  
