#Docker数据管理

用户在使用docker的过程中，往往需要能查看容器内应用产生的数据，或者需要把容器内的数据进行备份，甚至多个容器间进行数据的共享，这必然涉及容器的数据管理操作
容器中管理数据主要有两种方式：
数据卷（data volumes）
数据卷容器（data volume dontainers）

数据卷是一个可供容器使用的特殊目录。它绕过文件系统，可以提供很多有用的特性：
-数据卷可以在容器之间共享和重用
-对数据卷的修改会立马生效
-对数据卷的更新，不会影响镜像
-卷会一直存在，直到没有容器使用
数据卷的使用，类似于linux对目录或文件进行mount操作
如何在容器内创建数据卷，并且把本地的目录或文件挂载到容器内的数据卷中？
docker run 使用-v标记可以在容器内创建一个数据卷
挂载一个主机目录作为数据卷：docker run -ti -P --name web -v /src/webapp:/opt/webapp centos /bin/bash

数据卷容器：（建议）
如果用户需要在容器之间共享一些持续更新的数据，最简单的方式是使用数据卷容器。
数据卷容器其实就是一个普通的容器，专门用它提供数据卷供其它容器挂载使用。
方法如下：
1.创建一个数据卷容器dbdata，并在其中创建一个数据卷挂载到/dbdata
docker run -it -v /dbdata --name dbdata centos
2.可以在其他容器中使用--volumees-from来挂载dbdata容器中的数据卷，例如创建db1和db2两个容器，并从dbdata容器挂载数据卷：
docker run -it --volumes-from dbdata --name db1 centos
docker run -it --volumes-from dbdata --name db2 centos
此时，容器db1和db2都挂载同一个数据卷到相同的/dbdata目录。三个容器任何一方在该目录下的写入，其他容器都可以看得到。
使用--volumes-from参数所挂载数据卷的容器自身并不需要保持在运行状态

利用数据卷容器迁移数据
可以利用数据卷容器对其中的数据卷进行备份、恢复、以实现数据的迁移。
备份：使用下面的命令来备份dbdata数据卷容器内的数据卷
docker run --volumes-from dbdata -v $(pwd):/backup --name worker centos
tar cvf /backup/backup.tar /dbdta
恢复：
如果要恢复数据到一个容器，可以按照下面的操作。
创建一个带有数据卷的容器dbdata2
docekr run -v /dbdata --name dbdata2 centos /bin/bash

